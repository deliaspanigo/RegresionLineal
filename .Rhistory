all_pvalue_coeff[k1, the_position] <- the_pvalue_coeff
remove(the_table, the_position, the_coeff, the_pvalue_coeff)
}
##################################################################################
# Details about x vars for each model
new_rownames <- colnames(my_results$AllModels$model.1$x_details)
all_x_details <- as.data.frame(matrix(NA, count_models, length(new_rownames)))
colnames(all_x_details) <- new_rownames
# Count about how many x vars there are in each model
all_x_count <- rep(NA, nrow(all_x_details))
# For....
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$x_details
all_x_count[k1] <- nrow(the_table) - 1
for(k2 in 1:ncol(the_table)) all_x_details[k1, k2] <- paste0(the_table[,k2], collapse = ";")
}
#########################################
armado01 <- "all_y_details, all_x_details, all_n_info, all_coeff, all_pvalue_coeff, all_model_fit, all_pvalue_model_fit, all_x_count, all_sentence"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
whoamI <- "Rscience.LM.Resumen()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "Resumen")
return(the_exit)
}
Rscience.LM.Resumen(my_results = my_results)
# Conjunto basico
database <- mtcars
all_columns <- colnames(database)
x_var <- colnames(database)[2:ncol(database)]
y_var <- "mpg"
# Conjunto basico
database <- mtcars
all_columns <- colnames(database)
x_var <- colnames(database)[2:ncol(database)]
y_var <- "mpg"
my_results <- Rscience.LM.AllModels(database = database, y_var = y_var, x_var = x_var)
my_results
my_results <- Rscience.LM.AllModels(database = database, y_var = y_var, x_var = x_var)
my_results
resumen01 <- Rscience.LM.Resumen(my_results = my_results)
resumen01
aver <- Rscience.LM.OneModel(database = database, y_var = y_var, x_var = x_var)
aver
resumen02 <- Rscience.LM.Resumen(my_results = aver)
resumen02
aver
resumen02 <- Rscience.LM.Resumen(my_results = aver)
resumen02
my_results <- Rscience.LM.OneModel(database = database, y_var = y_var, x_var = x_var)
my_results
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results$AllModels$model.1[sub_seleccion]
for(k1 in 2:count_models){
for(k2 in 1:length(general_report))
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
# Is only one Y
all_y_details <- general_report$y_details
all_model_fit <- general_report$model_fit
all_pvalue_model_fit <- general_report$pvalue_model_fit
all_n_info <- general_report$n_info
all_sentence <- general_report$sentence
remove(general_report)
# All coeff - Intercept and Slopes
all_coeff <- as.data.frame(matrix(NA, count_models, length(new_cols)))
colnames(all_coeff) <- new_cols
# Al pvalue for coeff
all_pvalue_coeff <- all_coeff
# New Order!
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$the_summary $coefficients
the_position <- rownames(the_table)
the_coeff <- the_table[,1]
the_pvalue_coeff <- the_table[,4]
all_coeff[k1, the_position] <- the_coeff
all_pvalue_coeff[k1, the_position] <- the_pvalue_coeff
remove(the_table, the_position, the_coeff, the_pvalue_coeff)
}
new_rownames <- colnames(my_results$AllModels$model.1$x_details)
all_x_details <- as.data.frame(matrix(NA, count_models, length(new_rownames)))
colnames(all_x_details) <- new_rownames
# Count about how many x vars there are in each model
all_x_count <- rep(NA, nrow(all_x_details))
# For....
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$x_details
all_x_count[k1] <- nrow(the_table) - 1
for(k2 in 1:ncol(the_table)) all_x_details[k1, k2] <- paste0(the_table[,k2], collapse = ";")
}
armado01 <- "all_y_details, all_x_details, all_n_info, all_coeff, all_pvalue_coeff, all_model_fit, all_pvalue_model_fit, all_x_count, all_sentence"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
whoamI <- "Rscience.LM.Resumen()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "Resumen")
the_exit
general_report$y_details
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results$AllModels$model.1[sub_seleccion]
for(k1 in 2:count_models){
for(k2 in 1:length(general_report))
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
general_report
my_results$AllModels$model.1[sub_seleccion]
my_results
Rscience.LM.Resumen <- function(my_results = NULL){
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
for(k1 in 2:count_models){
for(k2 in 1:length(general_report))
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
##############################################################################################
# Is only one Y
all_y_details <- general_report$y_details
all_model_fit <- general_report$model_fit
all_pvalue_model_fit <- general_report$pvalue_model_fit
all_n_info <- general_report$n_info
all_sentence <- general_report$sentence
remove(general_report)
# All coeff - Intercept and Slopes
all_coeff <- as.data.frame(matrix(NA, count_models, length(new_cols)))
colnames(all_coeff) <- new_cols
# Al pvalue for coeff
all_pvalue_coeff <- all_coeff
# New Order!
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$the_summary $coefficients
the_position <- rownames(the_table)
the_coeff <- the_table[,1]
the_pvalue_coeff <- the_table[,4]
all_coeff[k1, the_position] <- the_coeff
all_pvalue_coeff[k1, the_position] <- the_pvalue_coeff
remove(the_table, the_position, the_coeff, the_pvalue_coeff)
}
##################################################################################
# Details about x vars for each model
new_rownames <- colnames(my_results$AllModels$model.1$x_details)
all_x_details <- as.data.frame(matrix(NA, count_models, length(new_rownames)))
colnames(all_x_details) <- new_rownames
# Count about how many x vars there are in each model
all_x_count <- rep(NA, nrow(all_x_details))
# For....
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$x_details
all_x_count[k1] <- nrow(the_table) - 1
for(k2 in 1:ncol(the_table)) all_x_details[k1, k2] <- paste0(the_table[,k2], collapse = ";")
}
#########################################
armado01 <- "all_y_details, all_x_details, all_n_info, all_coeff, all_pvalue_coeff, all_model_fit, all_pvalue_model_fit, all_x_count, all_sentence"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
whoamI <- "Rscience.LM.Resumen()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "Resumen")
return(the_exit)
}
Rscience.LM.Resumen(my_results = my_results)
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
general_report
my_results[[2]]
source("lib.R")
# Conjunto basico
database <- mtcars
all_columns <- colnames(database)
x_var <- colnames(database)[2:ncol(database)]
y_var <- "mpg"
Rscience.LM.OneModel <- function(database = NULL, y_var = NULL, x_var = NULL){
# All columns
all_columns <- colnames(database)
# X details for major models
if(length(x_var) >= 1 && x_var[1] != "") {
x_name_var <- x_var
x_order_var <- x_var
if(is.numeric(x_var)) x_name_var <- all_columns[x_var] else x_order_var <- match(x_name_var, all_columns)
x_letter_var <- num2let(x_order_var)
# Modelo
model <- paste0(x_name_var, collapse = " + ")
}
# X details for Model Null
else {
x_name_var <- NA
x_order_var <- NA
x_letter_var <- NA
model <- " 1"
}
# Y details
y_name_var <- y_var
y_order_var <- y_var
if(is.numeric(y_var)) y_name_var <- all_columns[y_var] else y_order_var <- match(y_name_var, all_columns)
y_letter_var <- num2let(y_order_var)
# X and Y details in specific objects
y_details <- data.frame(y_name_var, y_order_var, y_letter_var)
x_details <- data.frame(x_name_var, x_order_var, x_letter_var)
# Battle Ship
battle_ship <- na.omit(c(x_name_var, y_name_var))
mini_database <- na.omit(database[battle_ship])
# Model Structure
sentence <- paste0("lm(", y_name_var, " ~ ", model, ", data = mini_database)", collpase ="")
# Results of my regresion
my_results <- eval(parse(text = sentence))
the_summary <- summary(my_results)
# Special Details
the_r2 <- the_summary$"r.squared"
the_adj_r2 <- the_summary$"adj.r.squared"
the_aic <- AIC(my_results)
if(sum(x_var != "") > 0) {
pvalue_r2 <- pf(q = the_summary$fstatistic[1], df1 = the_summary$fstatistic[2], df2 = the_summary$fstatistic[3], lower.tail = F)
pvalue_adj_r2 <- pvalue_r2
} else
if(length(x_var) == 1 && x_var == "") {
pvalue_r2 <- NA
pvalue_adj_r2 <- pvalue_r2
}
# Model Fit Estimators
model_fit <- c(the_r2, the_adj_r2, the_aic)
names(model_fit) <- c("r.squared", "adj.r.squared", "aic")
pvalue_model_fit <- c(pvalue_r2, pvalue_adj_r2, NA)
names(pvalue_model_fit) <- c("pvalue.r2", "pvalue.adj.r2", "pvalue.aic")
# Count
n_database <- nrow(database)
n_mini_database <- nrow(mini_database)
n_na <- n_database - n_mini_database
n_info <- data.frame(n_database, n_mini_database, n_na)
#  names(n_info) <- c("n.database", "n.mini.database", "n.na")
armado01 <- "y_details, x_details, n_info, sentence, model_fit, pvalue_model_fit, the_summary, my_results"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
the_exit <- list(the_exit)
names(the_exit) <- "model.1"
whoamI <- "Rscience.LM.OneModel()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "OneModel")
return(the_exit)
}
aver <- Rscience.LM.OneModel(database = database, y_var = y_var, x_var = x_var)
aver
aver$OneModel
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
if(count_models > 1){
for(k1 in 2:count_models){
for(k2 in 1:length(general_report)){
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
}
}
Rscience.LM.Resumen <- function(my_results = NULL){
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
if(count_models > 1){
for(k1 in 2:count_models){
for(k2 in 1:length(general_report)){
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
}
}
##############################################################################################
# Is only one Y
all_y_details <- general_report$y_details
all_model_fit <- general_report$model_fit
all_pvalue_model_fit <- general_report$pvalue_model_fit
all_n_info <- general_report$n_info
all_sentence <- general_report$sentence
remove(general_report)
# All coeff - Intercept and Slopes
all_coeff <- as.data.frame(matrix(NA, count_models, length(new_cols)))
colnames(all_coeff) <- new_cols
# Al pvalue for coeff
all_pvalue_coeff <- all_coeff
# New Order!
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$the_summary $coefficients
the_position <- rownames(the_table)
the_coeff <- the_table[,1]
the_pvalue_coeff <- the_table[,4]
all_coeff[k1, the_position] <- the_coeff
all_pvalue_coeff[k1, the_position] <- the_pvalue_coeff
remove(the_table, the_position, the_coeff, the_pvalue_coeff)
}
##################################################################################
# Details about x vars for each model
new_rownames <- colnames(my_results$AllModels$model.1$x_details)
all_x_details <- as.data.frame(matrix(NA, count_models, length(new_rownames)))
colnames(all_x_details) <- new_rownames
# Count about how many x vars there are in each model
all_x_count <- rep(NA, nrow(all_x_details))
# For....
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$x_details
all_x_count[k1] <- nrow(the_table) - 1
for(k2 in 1:ncol(the_table)) all_x_details[k1, k2] <- paste0(the_table[,k2], collapse = ";")
}
#########################################
armado01 <- "all_y_details, all_x_details, all_n_info, all_coeff, all_pvalue_coeff, all_model_fit, all_pvalue_model_fit, all_x_count, all_sentence"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
whoamI <- "Rscience.LM.Resumen()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "Resumen")
return(the_exit)
}
Rscience.LM.Resumen(my_results = my_results)
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
if(count_models > 1){
for(k1 in 2:count_models){
for(k2 in 1:length(general_report)){
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
}
}
# Is only one Y
all_y_details <- general_report$y_details
all_model_fit <- general_report$model_fit
all_pvalue_model_fit <- general_report$pvalue_model_fit
all_n_info <- general_report$n_info
all_sentence <- general_report$sentence
all_y_details
general_report
my_results[[2]]
my_results[[2]]$model.1
my_results
my_results <- Rscience.LM.OneModel(database = database, y_var = y_var, x_var = x_var)
my_results
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
general_report
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
if(count_models > 1){
for(k1 in 2:count_models){
for(k2 in 1:length(general_report)){
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
}
}
general_report
Rscience.LM.Resumen <- function(my_results = NULL){
# Count of models
count_models <- length(my_results[[2]])
# Colnames for a new data.frame()
new_cols <- rownames(my_results[[2]][[count_models]]$the_summary$coefficients)
sub_seleccion <- c(1, 2, 3, 4, 5, 6)
# Take the first to start... and after that rbind()
general_report <- my_results[[2]]$model.1[sub_seleccion]
if(count_models > 1){
for(k1 in 2:count_models){
for(k2 in 1:length(general_report)){
general_report[[k2]] <- rbind(general_report[[k2]], my_results$AllModels[[k1]][[k2]])
}
}
}
##############################################################################################
# Is only one Y
all_y_details <- general_report$y_details
all_model_fit <- general_report$model_fit
all_pvalue_model_fit <- general_report$pvalue_model_fit
all_n_info <- general_report$n_info
all_sentence <- general_report$sentence
remove(general_report)
# All coeff - Intercept and Slopes
all_coeff <- as.data.frame(matrix(NA, count_models, length(new_cols)))
colnames(all_coeff) <- new_cols
# Al pvalue for coeff
all_pvalue_coeff <- all_coeff
# New Order!
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$the_summary $coefficients
the_position <- rownames(the_table)
the_coeff <- the_table[,1]
the_pvalue_coeff <- the_table[,4]
all_coeff[k1, the_position] <- the_coeff
all_pvalue_coeff[k1, the_position] <- the_pvalue_coeff
remove(the_table, the_position, the_coeff, the_pvalue_coeff)
}
##################################################################################
# Details about x vars for each model
new_rownames <- colnames(my_results$AllModels$model.1$x_details)
all_x_details <- as.data.frame(matrix(NA, count_models, length(new_rownames)))
colnames(all_x_details) <- new_rownames
# Count about how many x vars there are in each model
all_x_count <- rep(NA, nrow(all_x_details))
# For....
for(k1 in 1:count_models){
the_table <- my_results[[2]][[k1]]$x_details
all_x_count[k1] <- nrow(the_table) - 1
for(k2 in 1:ncol(the_table)) all_x_details[k1, k2] <- paste0(the_table[,k2], collapse = ";")
}
#########################################
armado01 <- "all_y_details, all_x_details, all_n_info, all_coeff, all_pvalue_coeff, all_model_fit, all_pvalue_model_fit, all_x_count, all_sentence"
armado02 <- paste0("list(", armado01, ")")
armado03 <- gsub(", ", "', '", armado01)
armado04 <- paste0("c('", armado03, "')")
the_exit <- eval(parse(text = armado02))
names(the_exit) <- eval(parse(text = armado04))
whoamI <- "Rscience.LM.Resumen()"
the_exit <- list(whoamI, the_exit)
names(the_exit) <- c("whoamI?", "Resumen")
return(the_exit)
}
Rscience.LM.Resumen(my_results = my_results)
source("lib.R")
# Conjunto basico
database <- mtcars
all_columns <- colnames(database)
x_var <- colnames(database)[2:ncol(database)]
y_var <- "mpg"
my_results <- Rscience.LM.AllModels(database = database, y_var = y_var, x_var = x_var)
my_results
resumen01 <- Rscience.LM.Resumen(my_results = my_results)
resumen01
my_results <- Rscience.LM.OneModel(database = database, y_var = y_var, x_var = x_var)
my_results
resumen02 <- Rscience.LM.Resumen(my_results = my_results)
resumen02
install.packages("export")
library(export)
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species,
size = Petal.Width, alpha = I(0.7))
graph2ppt(file="ggplot2_plot.pptx", width=6, height=5)
install.packages("rJava")
install.packages("ReporteRs")
install.packages("ReporteRsjars")
install.packages("ggplot2")
install.packages("rtable")
install.packages("xtable")
install.packages("rJava")
install.packages("ReporteRs")
install.packages("ReporteRsjars")
install.packages("ggplot2")
install.packages("rtable")
install.packages("xtable")
install.packages("taRifx")
install.packages("stargazer")
install.packages("tikzDevice")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("devtools")
library(devtools)
devtools::install_github('tomwenseleers/export',local=F)
install.packages("export")
library(export)
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species,
size = Petal.Width, alpha = I(0.7))
graph2ppt(file="ggplot2_plot.pptx", width=6, height=5)
library(devtools)
devtools::install_github('tomwenseleers/export',local=F)
library(devtools)
devtools::install_github('tomwenseleers/export')
library(export)
library(ggplot2)
install.packages("ggplot2")
library(export)
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species,
size = Petal.Width, alpha = I(0.7))
